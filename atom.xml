<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>终生成长者</title>
  <subtitle>人的一生，可以有很多辈子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xuzhougeng.github.io/"/>
  <updated>2017-08-27T13:29:26.107Z</updated>
  <id>https://xuzhougeng.github.io/</id>
  
  <author>
    <name>徐洲更</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每周回顾(2017/8/21-8/27)</title>
    <link href="https://xuzhougeng.github.io/2017/08/26/retrospect-2017-21-8-27/"/>
    <id>https://xuzhougeng.github.io/2017/08/26/retrospect-2017-21-8-27/</id>
    <published>2017-08-26T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>从下周开始恢复每日反思的习惯，而不是把总结拖到周日，这次就记录自己做到那些事情吧。</p><p><a href="http://mp.weixin.qq.com/s/0A86-WoKMb14SD22l9ZtGg" target="_blank" rel="external">科学网：如何姿势正确的抄袭他人代码？</a>: 借用别人的代码前先看协议，没有协议也要征询作者同意。数据分析和工具开发是不同的。</p><p><a href="http://mp.weixin.qq.com/s/bKKobD7R8wLTKWZszHGn4w" target="_blank" rel="external">R：关系型数据库管理</a>: 学会使用<code>DBI</code>控制数据库</p><p><a href="http://mp.weixin.qq.com/s/HUN39LjVFeX34JTs8V9caQ" target="_blank" rel="external">我想买一台Mac</a> : 全篇没有用“的”和“了”，然而大家都没有任何发觉。</p><p><a href="http://mp.weixin.qq.com/s/GppCYiQJg6O6Llsj8wyeDQ" target="_blank" rel="external">如何用好MacOS(一)</a> : 一定要装homebrew</p><p><a href="http://mp.weixin.qq.com/s/uyanNto91SeUz334zk0aKw" target="_blank" rel="external">七夕快到了，我们做题目吧</a> 条件概率和贝叶斯 好难呀。</p><p>其他：<br>我看完了，《穷爸爸和富爸爸》， 《拆掉思维里的墙》，然而没有做笔记。有以下概念在两本书里面，李笑来老师也反复强调的：</p><ul><li>安全感</li><li>受害者心理， 做掌控者，停止抱怨</li><li>不懂就不要投资</li><li>机会成本</li><li>负债和资产，购买资产而不是负债</li></ul><p>此外，我开始为期一年的虚拟投资训练，假设自己购买了Facebook等公司一份股票，每个月仅仅在26日统计。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从下周开始恢复每日反思的习惯，而不是把总结拖到周日，这次就记录自己做到那些事情吧。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s/0A86-WoKMb14SD22l9ZtGg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
    
    </summary>
    
    
      <category term="retrospect" scheme="https://xuzhougeng.github.io/tags/retrospect/"/>
    
  </entry>
  
  <entry>
    <title>每周回顾(2017/8-14-8/20)</title>
    <link href="https://xuzhougeng.github.io/2017/08/19/retrospect-2017-8-14-to-8-20/"/>
    <id>https://xuzhougeng.github.io/2017/08/19/retrospect-2017-8-14-to-8-20/</id>
    <published>2017-08-19T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.111Z</updated>
    
    <content type="html"><![CDATA[<p>上周也就是（8/7-8/13）的每周总结没写，主要原因就是回家后的自律会不自觉的降低，很多带回去想去做的事情大部分也都没有做，好在学了如何使用Python进行数据管理的基础知识。</p><p>这周回所，基本上也就做了一件工作有关的事情，就是把SHOREmap部分的结果跑了出来，是个负对照，效果很不明显，打算实行方案二，然而一拖再拖，最后拖到了现在都还没有完成，这就非常尴尬了。</p><h2 id="看到"><a href="#看到" class="headerlink" title="看到"></a>看到</h2><h3 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h3><p><a href="http://mp.weixin.qq.com/s/BTYRiu4GJ-uVNeaOGYkxOw" target="_blank" rel="external">好运气的数学原理</a> : 条件概率告诉我们，成功其实是一个概率事件，当然了运气好是成功人士的谦虚，对于普通人却是一种接口。<br><a href="http://mp.weixin.qq.com/s/4FU2ATs1fSpnK1GnMLYndw" target="_blank" rel="external">比戒网中心更可怕的，是愚昧的父母</a> : 中国社会下，家长大多把孩子当作自己的所有物，而不是独立的个体，所以当孩子不听管教的时候，一定是孩子的问题，一定是这个社会出了问题，而不考虑自己的教育是否存在问题。所以“天下的父母哪有不爱自己的子女”这句话笑笑就好了，没有任何的逻辑论证。<br><a href="http://mp.weixin.qq.com/s/xvlwHLw8CiadnEY2GeWFwA" target="_blank" rel="external">写在比特币30000之后，你的手上还有多少币？</a> ： 对于自己不了解的事物，否定就行了，为什么要去想它到底合不合理呢？别人居然还靠这个东西赚钱了，简直不可思议。<br><a href="http://mp.weixin.qq.com/s/6k2YxKkQ5JlwbkcOYZzkXg" target="_blank" rel="external">晴予：和正确的人在一起！（受益终生）</a> : 婚姻其实并无多少高尚，一个美好的婚姻最靠谱的方法就是”管理学当中，“招人要慢”后面，跟着一句“开人要快”。“<br><a href="http://mp.weixin.qq.com/s/2c9gjOWLxZFUZWcxQ966BA" target="_blank" rel="external">揭秘婚介机构：我能在那里找到伴侣吗？</a> : 作为一个客户，如果你发现价格过高，就说明自己的要求或许太高了，听听顾问的意见。<br><a href="http://mp.weixin.qq.com/s/tVPZ3tA6Rp5I9Aen8VAgyQ" target="_blank" rel="external">我没有任何工匠精神</a> : 我说自己没有任何工匠精神这是做人起码的诚实，要我施施然接受了这种说法才是一种僭越和撒谎。</p><h3 id="蚂蚁私塾"><a href="#蚂蚁私塾" class="headerlink" title="蚂蚁私塾"></a>蚂蚁私塾</h3><p>本周学习的是《异类》，成功学图书的一股清流，多年前读完它，就记得”一万小时定律“，然而这只是这本书的其中一个观点. 跟着蚂蚁私塾读完得到的结论则是：</p><blockquote><p>学习概念固然有用，但最重要的是学习作者分析事物、看待事物的角度和方法，很多时候，我们不能从单一视角去判断一个人、一件事，不能从某个显而易见的原因去推出某个特定性的结果。</p></blockquote><p>以下是《异类》告诉我们如何成功的一些歧视，而不单是一万小时和马太效应这几个被说烂的概念：<br>1、善于利用年龄分组策略给自己增加优势，避免进入“不公平竞争”。<br>2、就算我们因为成绩没那么突出而受到批评，告诉自己，只是还差一点运气，我们并没有那么差，不要受到不好的心理暗示影响。<br>3、学会耐心等待，在机遇出现之前有足够的积累才能在它出现之时把握住。<br>4、对自己所在的领域投入自己力所能及的时间量，如果可以，请在有效时间上超过10000个小时。<br>5、不要过分在意智商，智商可以通过其他方面弥补，且过了阈值以后基本就没啥用了。<br>6、不要扼杀创造力和想象力，一旦扼杀了以后很难通过后天学习来习得。<br>7、如果实践智力并没有那么强，努力给自己创造情境练习，这是可以通过自信和有效社交来获取的。<br>8、坚持很重要，重要到如果没有它，其他的成功因素都无效的地步。<br>9、了解自己的文化，了解他人的文化，勇于突破文化禁锢，将好的文化为己所用。<br>10、热爱困难，培养自己从解决困难中得到成就感和乐趣的习惯，光靠意志力坚持是不太靠谱的，必须是有乐趣的自愿行动，这能让我们不容易半途而废。</p><h3 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h3><p>下周的蚂蚁私塾要学习是古典的《拆掉思维里的墙》，于是我在kindle上购买了这本书，在做火车的路上看了一半：<br>第一章的主题是安全感。和李笑来说的“你人生最终的枷锁是什么”是一致的，文章提供了6招方法提高安全感</p><ol><li>小范围地冒险</li><li>远离太容易获得的安全感</li><li>真爱生命，远离恐惧。 李笑来说远离抱怨的人</li><li>做一个恐惧保险箱</li><li>做成功日志</li><li>面对恐惧，触底反弹。 《面对恐惧，从容面对》里将恐惧分为三个层次，我们会发现我们恐惧的是自己没有能力应对这个失去，比如说失恋，丢掉工作，实验失败等等</li></ol><p>第二章是关于兴趣的。 对任何事情都提不起兴趣的人其实是不愿意全身心投入，之所以不肯全身心投入，是担心自己投入的事件没有任何意义。</p><p>第三章关于心智模式。 其实就是”自证预言“， 你认为这个世界是什么样子的，这个世界就会变成你说的那样。 人们宁愿自我欺骗，也不愿意相信自己是被欺骗。因为他活在自己的思维之墙里。也可认为是沉没成本。阅读李笑来曾写过”这个世界其实是有生命的”。</p><p>第四章关于成功学。 文章里纠正了史泰龙，麦当劳爷爷和比尔盖茨的成功学故事。所谓世俗的成功其实是outlier，成功学抓住年轻人想走捷径的弱点，于是鼓吹你只要XX就能XX的理论，然后就被收了智商税。</p><h2 id="做到"><a href="#做到" class="headerlink" title="做到"></a>做到</h2><p>在公众号里更新了如下文章<br><a href="http://mp.weixin.qq.com/s/OQAa73Wg4C0ZRev1GogOnw" target="_blank" rel="external">课题做不下去怎么办（植物篇）？</a> : 也就是介绍了<a href="http://bar.utoronto.ca/eplant/" target="_blank" rel="external">http://bar.utoronto.ca/eplant/</a> 顺便拉黑了惹我不开心的人，原因是和我预期的结果相反。<br><a href="http://mp.weixin.qq.com/s/iHnogzM6QSu8tlImE26_Wg" target="_blank" rel="external">一文学会ChIP-Seq数据分析（想想也不可能）</a> : 实战了ChIP-Seq, 未来需要补充基本知识。</p><p>周日下午入门了<code>shiny</code>，心得如下：</p><ul><li>对于一个shiny应用，要建立一个存放该应用的文件夹，要有ui.R , server.R文件和www文件夹（可选）</li><li>ui.R 存放网站设计， 提供了input和output两个变量用于读取数据和输出结果到网页</li><li>server.R 则是服务器端，负责input内容如何加工, 赋值给output对应的变量</li><li>运行shiny应用有三种方式，命令行的<code>R -e &quot;shiny::runApp(&#39;~/shinyapp&#39;)&quot;</code>, R中的<code>shiny::runApp(&#39;~/shinyapp&#39;)</code>, 或者将app部署到shinyapp.io, <code>rsconnect::deployApp()</code></li></ul><p>由于有一定的前端（以前搞过Python的django和flask）和后端经验（R基础不错），所以学起来不太费劲。并且强大shiny，也让我感受到R的强大之处。</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><ul><li>不断练习shiny可视化</li><li>BSA分析该结束了</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周也就是（8/7-8/13）的每周总结没写，主要原因就是回家后的自律会不自觉的降低，很多带回去想去做的事情大部分也都没有做，好在学了如何使用Python进行数据管理的基础知识。&lt;/p&gt;&lt;p&gt;这周回所，基本上也就做了一件工作有关的事情，就是把SHOREmap部分的结果跑了出
    
    </summary>
    
    
      <category term="retrospect" scheme="https://xuzhougeng.github.io/tags/retrospect/"/>
    
  </entry>
  
  <entry>
    <title>整个世界都是你的已知条件(生信学习心得)</title>
    <link href="https://xuzhougeng.github.io/2017/08/10/how-to-start-bioinformatics/"/>
    <id>https://xuzhougeng.github.io/2017/08/10/how-to-start-bioinformatics/</id>
    <published>2017-08-10T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>我的小密圈圈友付费向我提问，让我介绍一下我的生信学习心得。关于经验类的文章，我基本都是有感而发，总是不太全面，所以借这一次机会系统的介绍一下。</p><a id="more"></a><h2 id="关于经验"><a href="#关于经验" class="headerlink" title="关于经验"></a>关于经验</h2><p>大部分都很喜欢听别人的心得，学习别人的经验。但是作为一个在随机世界生存的傻瓜，我们先得理解一些概率论的智慧。比如我在公众号《请辩》里看过如下一段话</p><blockquote><p>为什么马云说一句话，大家点头称是，王健林弄个行程表，大家纷纷称赞，因为大家都认为，有钱人说任何话做任何事都是他们有钱的原因之一，跟着做都不会错<br>但很多时候，是不是有另一种可能，那就是你效仿的东西或许正事那位有钱人没有取得更高成就的原因？</p></blockquote><p>成功的人或许有一些独特的品质，但是有这些独特品质的人未必成功。在我眼里，成功更多是一种偶然事件，成功的路上发生很多事情，但只有部分事情是和结果挂钩，如果你没有正确的进行归因，把被成功掩盖的错误因素当做自己的制胜法宝，结局不言自明。</p><p>综上，我希望还能通过这次机会对我学习生信之路做一个复盘，由于我的表达能力有限，或许有些啰嗦，请见谅。</p><h2 id="我的大学"><a href="#我的大学" class="headerlink" title="我的大学"></a>我的大学</h2><p>不好意思，一下子把时间拉回到了我的四年前，那时候我经历过高考的失利，为了替家里省学费的开支，填报了省内免学费的农学专业。我那时候开玩笑说，这个专业从不失业，毕竟家里还有几亩地。同时，填报的大学又在搞精英班，我就参加了选拨，笔试面试后就成为第二批的<strong>实验鼠</strong>。</p><p>那个时候一心想着拿个奖学金，让我妈开心一点（她希望我能上一个一本大学，而我没有做到），于是就去啃最难的一门课“高等数学”。非数学专业的高等数学其实一点都不难， 只要做到多做题目就行了，还有做被泄露出来的历年真题，那么成绩就不会差到那里去。 渐渐地，我就成为了别人眼里的“学霸”。在第二学期，出于对计算机的热爱， 我在VC和C语言之间选择C语言（没教指针！！！）， 其实期末考试也就是背背题目而已。</p><p><strong>你有什么样的能力，总会抵达符合你能力的地方</strong>。 大一的那个暑假，我的一个学姐就拉我这个一年级新生去参加<strong>数学建模</strong>培训了。这个暑假比较关键，我接触了MATLAB， R， SPSS。当时水平完全局限在抄代码上，不可思议的是居然还拿一个三等奖作为安慰奖。后来参加美国大学生数学建模大赛，花了一个寒假时间学了LaTeX，把图书馆借来的《R语言实战》翻了第一遍,又拿了一个三等奖。</p><blockquote><p>其实这个时候，我写代码的能力几乎为零,抄代码能力还行。</p></blockquote><p>知道“生物信息学”这个概念是在我们规划课程的时候，那个时候只知道它不用做实验就能发文章，敲敲代码就好了，于是就问课程老师要来了他的PPT。 PPT里面涉及到的内容就是如何检索常用数据库（NCBI, EBI等），BLAST等，然后听说学生信要学Perl。于是，我在大二的暑假种棉花，提DNA，跑胶之余还翻过一本和Perl相关的书。</p><p>学习Perl的时候我还在网上百度<strong>Perl</strong>的相关资料，于是看到一篇比较Python和Perl的文章。当时，我的想法是我要学习最好的语言，看到有人说Python好，我就去看<strong>Python</strong>，并且有人还在数学建模的比赛中用Python处理文本数据。似乎那个时候Python的资料比较少，没有像现在那样充斥着Python爬虫教程，所以我也没有学下去。</p><p>时间继续往前，到了大二第一学期的暑假，我在知乎上看到了<a href="https://www.zhihu.com/people/xiaomingwang/answers" target="_blank" rel="external">卡牌大师</a> 的回答，发现数据挖掘好屌的样子，于是加了他的第一个千人微信群，订阅了公众号SOTON数据分析。购买了和数据分析相关的电子书和纸质书，比如说用Python进行数据分析。 努力学习过一段时间，还制定过学习安排表。不过性格求稳，不愿意冒风险，最后我还是考了生物相关的研究生。</p><p><strong>划重点</strong>开始，到目前为止，不难发现，我其实在本科阶段<strong>很不系统</strong>地接触了C， Perl， Python， MATLAB, R， LaTeX，试图去学习数据分析，看过R语言实战，利用Python做数据分析，通过MATLAB知道了神经网络，遗传算法，马尔可夫链等概念。这些都散落在我的记忆的某个部分，只不过没有结构化的串联在一起而已。</p><blockquote><p>从来都没有零基础学习XX，整个世界都是你的已知条件，如果你觉得自己是零基础，担心学不好，那么说一个更可怕的事情，你担心自己学不好的一瞬间，你就是负基础，你学习的难度增大，放弃的概率增加，最后终于<strong>顺理成章</strong>的证明了自己能力不足。</p></blockquote><h2 id="大四下半学期"><a href="#大四下半学期" class="headerlink" title="大四下半学期"></a>大四下半学期</h2><p>从理论上将，大四的下半学期应该算是我的大学的一部分，但在这个时期，大部分人其实都开始去实习了，所以也不太算是大学的一部分了。我在这个时间段去植生所实习了，在一次性拿到两个月的补助（1600）的时候，我觉得要给自己充电，于是我捡起来好久没学的Python，用一个非常正确的姿势入门了Python。</p><p align="center"><br><img src="http://oex750gzt.bkt.clouddn.com/17-8-11/41564515.jpg" alt=""><br></p><br>并且当时买课还送书，我选择了《鸟哥的Linux私房菜》。那个时候，我的师兄还给了我一个北邮人BT站点的邀请码，所以我下载了“马哥的Linux运维课程”，所以我没事的时候就看一集马哥的视频，翻几页的鸟哥的书。<br><br>这段期间，我还立志要给所在实验室做一个网站，于是我还去学习了Django和flask，最后由于前端搞不定，所以泡汤了。<br><br>在暑假回家的时候，带着师姐提供 tophat 转录组分析流程的paper回了家，一边学车一边依葫芦画瓢的跑程序。全然不知道，无重复的样本是不能用cuffdifd做差异表达分析的！！！<br><br>## 研一上学期<br>放假回来之后，发现师姐的问题还是没有解决。为了解决师姐的问题，我继续利用搜索找资料，被我找到了 <em>RNA-Seq Data analysi-A practical Approach</em> .一本非常系统介绍了RNA-Seq数据分析的书， 当然是我目前的评价，之前并没有这个感觉。<br><p align="center"><br><img src="https://images-cn.ssl-images-amazon.com/images/I/41JYiLtWtUL._AA160_.jpg" alt="产品详细信息"><br></p><br>我在上课期间把这本书看完了“第一遍”， 然而问题还是没有解决，因为单个样本是不能用DESeq2分析差异表达的！！！<br><br>不知不觉第一轮轮转（2个月）结束了，我去了第二轮的实验室。那个实验室是只做湿实验的，但是老板特别尊重我的意愿（其实还有多方面因素），于是放任我自己学习生信。我继续上网找资料，被我在亚马逊找到了第二本和生信有关的书 <em>Bioinformatcis Data skills</em> ，我还特地买了亚马逊礼品卡，在美亚买了电子版。<br><p align="center"><br><img src="https://images-cn.ssl-images-amazon.com/images/I/51gYdVvOoQL._AA160_.jpg" alt="产品详细信息"><br></p><p>这本书最大的价值，就是给了我一个生信工程师的定义</p><blockquote><p>要想成为音乐家，你必然要掌握一门乐器。但是掌握一门乐器是不够的，你还得继续深入，学习理论知识。只有这样子，当你进入一个酒吧，听到别人弹吉他的时候，你能够熟练用任何一门乐器和他进行配合。</p></blockquote><p>这本书其实没有系统降解分析流程，他更多的是介绍了生信必须掌握的一些工具，用于解决生物学问题。如何用R，Python， samtools等工具处理数据。</p><p>看完这本书的时候，差不多2个月又过去了，我依旧没有定组，于是进入了第三轮。第三轮去的是一个专门做生信的课题组，。由于时间太短， 我的性格使然，在没有融于这个团队的时候，轮转的时间过去了。那一个月的时间，我基本上就翻译bioconductor上面几个workflow。然而<strong>看得懂字，看不懂意思</strong>。</p><h2 id="研一下学期"><a href="#研一下学期" class="headerlink" title="研一下学期"></a>研一下学期</h2><p>这个学期回到了我大一的节奏，因为生物统计学和R语言。我回到第二轮所在的实验室，不做实验，时间很充裕，可以安心学习生统。 结果也就很明显，我打通了统计学和高通量测序分析的任督二路。我加入了“生信媛”，开始一边学习 一边写作，我还加入了“生信技能树”，在上面有了一个属于工作介绍的专栏。通过自己某次给Y叔做的生信日历，认识了Y叔。</p><p>这个期间还做了第一个项目，就是重测序定位基因，走了自己的第一个流程。</p><h2 id="总而言之"><a href="#总而言之" class="headerlink" title="总而言之"></a>总而言之</h2><p>祝贺你们，终于看到了这里，可以看看我的总结性话语了。</p><p>第一： 关于<strong>学习心态</strong>。这世界上不存在真正的零基础入门某个领域的情况。大脑的工作机制就是用旧的知识去理解新的知识。如果你认为自己是小白，自己基础不好等，那么实际情况是你高估了你自己了。你的基础其实是负的，你保证基础不好的心态学习，结果只会证明自己不行了。真正的情况是，你要把整个世界都当做已知条件。</p><p>第二： 关于<strong>快速入门</strong>。 生信快速入门的最好方式其实是<strong>学徒制</strong>。不是像我那种零散的学习，最后有一天不同的知识回路得到串联。 如果你想学生信，有可能就去华大或者诺和这些公司去实习，<strong>不是去培训</strong>，参加项目。我保证这个用到啥就学啥的学习速度是最快的，虽然可能是很痛苦的。如果你没有能力去这些大公司学习，那么参加曾健明师兄组织的转录组2个月入门生信，也是类似于做一个项目的方式。</p><p>第三： 关于<strong>零散学习</strong>。 从我口述的经验而言，我没有过多系统性的学习。我的Python, Linux, R等基础知识在学习时候根本不知道该如何使用。我在学习过程中没有正确地把知识串联起来。直到统计学学了一段时间之后，量变导致质变，感觉自己的等级突然跃升了。依靠顿悟的方式太玄乎了，所以我建议你们在学习生信任何一个局部的知识，都要想想如何把局部知识进行串联。由于基础知识的匮乏，一开始将会非常困难，但是请坚持下来。</p><p>第四： 关于<strong>书籍推荐</strong>。</p><ul><li>Linux推荐《鸟哥的Linux私房菜》，通俗易通，上手Linux必备。</li><li>编程语言， 我推荐Python。因为他容易上手，材料一抓一大把。新手推荐先看<a href="http://www.ituring.com.cn/book/1863" target="_blank" rel="external"> 编程小白的第一本 Python 入门书</a>， 大致了解Python。后面就尝试用Python做题目了，<a href="http://www.biotrainee.com/forum-90-1.html" target="_blank" rel="external">生信人必练的200个数据处理任务</a> ，学会看官方文档，用搜索引擎。 把自己的想法编程代码。 写过一段时间代码后，就可以去看《流畅的Python》等进阶书籍。</li><li>统计学。 我是通过上课学习统计学的，之前我看过一个阶段《商务与经济统计》。以我现在的眼光看这本书的编排挺好的，根据案例讲解统计学的知识点。但是偏向于商务和金融方面，如果找到足够多的案例，就可以编一本《高通量测序数据分析的统计学基础》。</li><li>R语言推荐《R语言与统计分析》，学习R最好的方式就是和统计学结合起来；《R语言编程艺术》可以让你不局限于调用R自带的函数，掌握用R语言进行编程；《R语言实战》，这本书刚开始看的时候，只推荐看入门的前五章，掌握基础的数据管理能力，这是通用的。没有统计学基础看中级方法，你看了等于白看。绘图推荐《ggplot2: 数据分析和图形艺术》， 理解图形语法，还有一本《R绘图系统》用于进阶。<strong>关注biobabble</strong>, 跟着Y叔画图.</li><li>高通量测序基础。这个我是通过看 <em>RNA-Seq Data analysi-A practical Approach</em> 的前面几章学会的，待补充。</li><li>生物学基础， 没事就翻翻《Lewin基因X(中文版)》这本书吧，毕竟生信的主要目的是解决生物学问题。如果你的生物学基础太差，你连解题思路都没有，学到的软件都不知道怎么用。</li></ul><p>仅个人看法，欢迎讨论，我进行补充。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的小密圈圈友付费向我提问，让我介绍一下我的生信学习心得。关于经验类的文章，我基本都是有感而发，总是不太全面，所以借这一次机会系统的介绍一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="retrospect" scheme="https://xuzhougeng.github.io/tags/retrospect/"/>
    
      <category term="bioinformatics" scheme="https://xuzhougeng.github.io/tags/bioinformatics/"/>
    
  </entry>
  
  <entry>
    <title>学科目3的一些感想(2)</title>
    <link href="https://xuzhougeng.github.io/2017/08/03/how-to-be-driver-2/"/>
    <id>https://xuzhougeng.github.io/2017/08/03/how-to-be-driver-2/</id>
    <published>2017-08-03T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>查理·芒格曾说过</p><blockquote><p>如果你只有一把锤子，那么你看待所有问题都像钉子</p></blockquote><p>他的意思是我们需要建立多元思考模型，从不同的角度，用不同学科的知识解决问题，查理老人家他本人都掌握了100多种思维模型。而掌握思维模型不是突击考试，我们需要在现实情况中践行这些知识，从而固化到我们的神经通路中，那么我还能在学车之间事情用那些道理。<br><a id="more"></a></p><h2 id="百分百安全感"><a href="#百分百安全感" class="headerlink" title="百分百安全感"></a>百分百安全感</h2><p>今天在练习几次昨天的内容后，教练提高了难度，让我们开到国道上，挂5档，速度提高到80公里/小时。在看了前面几个人的练习后，我几乎是毫不犹豫的直接加速到了最快速度。对了，昨天练习1~4档，我也是保持在40公里/小时附近。</p><p>有些人不敢开的那么快， 很大一部分担心就是无法控制好汽车这种大体积运输工具，速度太快控制不好方向，体积太大，担心碰到其他汽车。他们希望一切都是可以掌握的，或者说是安全感。 但其实人类的演化过程中就是不断放弃安全感的过程，比如人类的视野是存在死角的，不像一些低等动物可以长在两侧可以看到周围发生的一切。 但是为什么我们敢于放弃全视野呢？因为人类通过相互合作的方式将这种视野盲区弥补上了。</p><p>所以在练车的时候，因为教练在旁边，我也就能够放弃了我的一部分安全感，我相信教练能够及时处理紧急情况。所以我就尽力将练习保持在“学习区”，让教练不断发现我的问题，同时锻炼我的心态。</p><p>同时我也相信公路上其他司机的驾驶水平比我好，看到教练车的时候会保持警惕。 我按喇叭的时候，前方的行人会注意避让，如同我作为行人那样。</p><h2 id="非期然后果"><a href="#非期然后果" class="headerlink" title="非期然后果"></a>非期然后果</h2><p>当我绑上安全带的时候，我偶尔会想到罗辑思维有一期介绍的一个概念，叫做“非期然后果”。 它里面举了一个例子，就是安全带时候大致了车祸发生的次数增加。这是一个粗想很不可思议，但是再进一步就能豁然开朗的例子。 当我们绑上安全带，我们就把自己的一部分安全感交给了安全带（或者还有安全气囊），所以开车的时候可能就有点放松，导致车祸率提高了。 这就是非期然后果，一个政策的实行，一个产品的使用没有得到期待中的那个结果，好像郑也夫的《文明是副产品》的标题那样。 我们的现如今的社会其实是一个巨大的协作网络，你制订的计划想的是这样，但是一旦执行后，就会产生会多意想不到的结果。也就是说，如果你有一个创意，不要闭门造车，先做一个最小可用版本丢到市场上，然后不断的听取用户的需求进行改善，有点像凯文·凯里的那本《必然》描述的进托邦。</p><h2 id="金鱼的物理定律"><a href="#金鱼的物理定律" class="headerlink" title="金鱼的物理定律"></a>金鱼的物理定律</h2><p>开车时候，我们的视野基本上就只有前面一片加上后视镜里的世界了。由于后视镜的角度问题，我总是好奇车辆行驶的时候是否是处于直线状态。这种视觉特性仿佛就建立了一套新的物理学定律。</p><p>有些“动物主义者”曾经抱怨金鱼被饲养在玻璃缸的行为，认为剥夺了他们观察真实世界的权利。霍金认为，如果金鱼中也存在一个科学家的话，他们也会根据自己的观察建立出一套玻璃缸物理学定律。</p><p>也就是说现代科学建立在经验主义上，这套理论能够解释我们所看到的大部分现象，也能进行预测，运行的非常良好，但是是不是符合真实的客观世界呢？ 恐怕只有造物主才能告诉我们了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;查理·芒格曾说过&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果你只有一把锤子，那么你看待所有问题都像钉子&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;他的意思是我们需要建立多元思考模型，从不同的角度，用不同学科的知识解决问题，查理老人家他本人都掌握了100多种思维模型。而掌握思维模型不是突击考试，我们需要在现实情况中践行这些知识，从而固化到我们的神经通路中，那么我还能在学车之间事情用那些道理。&lt;br&gt;
    
    </summary>
    
      <category term="cognition" scheme="https://xuzhougeng.github.io/categories/cognition/"/>
    
    
      <category term="Delibrate Practive" scheme="https://xuzhougeng.github.io/tags/Delibrate-Practive/"/>
    
      <category term="cognition" scheme="https://xuzhougeng.github.io/tags/cognition/"/>
    
  </entry>
  
  <entry>
    <title>学科目三的一些感想(1)</title>
    <link href="https://xuzhougeng.github.io/2017/08/02/how-to-be-driver/"/>
    <id>https://xuzhougeng.github.io/2017/08/02/how-to-be-driver/</id>
    <published>2017-08-02T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>作为一名研究生，每年都有几个星期是能用来休假的（这主要取决于实验室），于是我回去学习一年前剩下的科目三了去了。今天是第一天上路，所以这真的是一篇学车的心得体会。<br><a id="more"></a><br>上车之后，教练首先给我们介绍了一下“模拟灯光”，也就是不同情况下该用什么类型的灯光。实不相瞒，一年过去了，我已经不能分辨什么灯是什么灯了。这其实非常符合我们大脑的工作机理，尽管大脑的长期记忆是无限的，但是如果没有经过恰当的编码（encode），那么回忆起来将会是非常困难，一年前应付科目一的学习方式其实就是刷选择题。人类的大脑非常擅长做选择题，这是千万年的演化的结果，必须要快速找到环境中陌生的存在，才能躲避可能的危险。</p><h2 id="COMT基因和临场发挥"><a href="#COMT基因和临场发挥" class="headerlink" title="COMT基因和临场发挥"></a>COMT基因和临场发挥</h2><p>讲解“模拟灯光”的时候，教练还说有一个姑娘已经2次考试挂了，这次就是因为太紧张，还没有上路，就在灯光这里被KO了。 我想到了万维钢在《夺魁者本色》的一个论据：台湾师范大学的张俊彦率领的团队研究发现，重大考试容易失利的学生可以通过一个等位基因COMT进行解释。人脑高速运行（兴奋）的时候会分泌多巴胺，作用是帮助神经细胞传递脉冲，多了少了都不好。而在大脑的前额皮质中有一种负责清除多巴胺的酶就是由COMMT基因够编码。他有两种变异，其中快酶能够快速清除多巴胺，慢酶故名思议。大部分人同时拥有这两者，少部分人则只有其中一个。<br>也就说， 如果你COMT编码快酶，那么你遇到压力分泌的多巴胺会被快速的清除掉，也就是你显得特别淡定。看起来特别好，但是由于平时COMT也转录翻译，所以那些人平时的多巴胺也会很快被清除，表现出来就是无精打采，没有冲劲。这让我想起来全职高手的“大心脏选手”和火影忍者的奈良鹿丸。<br>如果你的COMT编码慢酶，平时分泌的多巴胺由于清除速度不够快，所以能够一直保持兴奋状态，表现就感觉很好。但是在面对巨大压力的时候，却由于多巴胺过多，太过兴奋，也就是电脑过热，反而运行速度太慢。</p><h2 id="行车指令和认知心理学"><a href="#行车指令和认知心理学" class="headerlink" title="行车指令和认知心理学"></a>行车指令和认知心理学</h2><p>之后就是上路具体开车的过程，我总结了一下，教练下达的命令可以分为如下几个：</p><ul><li>上车准备</li><li>车辆起步</li><li>加档动作</li><li>减档动作</li><li>超车动作</li><li>靠边停车</li><li>情况处理</li></ul><p>对于一个新手而言，也就是我，上车之后立马手慢脚乱，油门当做刹车踩，离合器老是容易忘松开，转向忘记打转向灯等。这是为什么呢？在认知心理学上，人的记忆分成两种：工作记忆（短期记忆）和长期记忆。据研究表明，人的长期记忆接近无限，类似于电脑硬盘，但是存放方式不同。而人的工作记忆却只有2~3个（RAM特别小），也就是说你同时只能处理2到3件事情。在刚开始学车的时候，比如说车辆起步就涉及到挂一档、打转向灯、按喇叭、放手刹、检查仪表盘、通过后视镜检查路况等6个步骤，也就是需要6个工作记忆。加档动作涉及到踩油门达到一定速度，松开油门踩离合器，切换合适的档位（不熟练的话，你还需要想一下），松开离合器，当然完成这几步的同时，你还得注意来往车辆和稳定你的方向盘，差不多也要5个工作记忆。</p><p>但是，你会发现老司机在一边开车，一边还能和你谈笑风生。这是因为他们把这些步骤封装(chunk)成一个组块存放在几乎无限的长期记忆中，也就只要一个工作记忆了。当然这也仅限于普通路况，如果路况复杂，他们就不会和你聊天了。</p><blockquote><p>由此做笔记是非常重要的，你必须要把当前读书心得记下来，这样子才有足够的工作记忆去阅读下面的内容。</p></blockquote><h2 id="学车和刻意练习"><a href="#学车和刻意练习" class="headerlink" title="学车和刻意练习"></a>学车和刻意练习</h2><p>刻意练习(deliberate practice)是不太耳闻能详的概念，但是你一定听过“一万小时定律”，就是练习一万小时成为专家。这当然是不可能的，必须是刻意练习，才能算是练习。路边下棋的，下的再多也不一定有受过训练的厉害。</p><p>如果想要刻意练习必须达到达到如下三个标准：</p><ul><li>只在“学习区”学习。 学习区就是你需要稍微努力才能掌握的区域</li><li>掌握套路。分为两种，一种以量取胜，一种就是非纯脑力劳动的专业技能</li><li>随时获得反馈</li></ul><p>这三个方面看，其实学车就是一个完美的刻意练习过程。<br>第一： 教练每次练习的地方都会选择比较符合你的当前情况。 第一天会选择几乎没车的地方，过几天就是有一些车，再过几天，路况会更恶劣一点。<br>第二： 学车就是一种非脑力劳动的专业技能。无论我的学历有多高，对汽车有多了解，必须要不断练习才能掌握，比如说生活大爆炸的Sheldon学车经历。而且掌握套路的过程就是不断重复，目前我发现重复阶段还存在缺陷。由于一个教练带4个学徒，我一个下午大概练了5次，有些不太熟练的部分，比如说靠边停车没有去专门练习。<br>第三： 随时获得反馈。这个就特别明显了，教练在你旁边会根据你的动作进行纠正，一旦错误，就会马上干预。而且你的每次操作都能马上得到一个反馈，踩油门，速度就上去了。一不小心刹车踩猛了，就熄火了。</p><h2 id="为什么年龄越大学车越难"><a href="#为什么年龄越大学车越难" class="headerlink" title="为什么年龄越大学车越难"></a>为什么年龄越大学车越难</h2><p>学车，还有其他技能习得，一般都是越年轻越容易。这个原因在我上细胞生物学的时候，老师解释说这是由于人体节律导致的, 更直接的原因是<strong>快速眼动睡眠</strong>。我们在睡觉的时候，大脑并不是去休息了，它会在快速眼动睡眠时期，对白天习得的知识进行整理。因此经常会出现第一天可能手慢脚乱，第二天就感觉驾轻就熟了的情况。而老年人，普遍睡眠质量不佳，快速眼动睡眠时期更短，因此学技能就比较难了。</p><p>以上就是我第一天学车的心得体会，感谢你花时间来看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一名研究生，每年都有几个星期是能用来休假的（这主要取决于实验室），于是我回去学习一年前剩下的科目三了去了。今天是第一天上路，所以这真的是一篇学车的心得体会。&lt;br&gt;
    
    </summary>
    
      <category term="cognition" scheme="https://xuzhougeng.github.io/categories/cognition/"/>
    
    
      <category term="Delibrate Practive" scheme="https://xuzhougeng.github.io/tags/Delibrate-Practive/"/>
    
      <category term="cognition" scheme="https://xuzhougeng.github.io/tags/cognition/"/>
    
  </entry>
  
  <entry>
    <title>如何“开始”学Python</title>
    <link href="https://xuzhougeng.github.io/2017/08/01/how-to-begin-python/"/>
    <id>https://xuzhougeng.github.io/2017/08/01/how-to-begin-python/</id>
    <published>2017-08-01T16:00:00.000Z</published>
    <updated>2017-08-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习一项技能最困难的阶段就是如何<strong>开始</strong>， 这无异于是进入新的世界，接触的东西都是很难用过去经验进行衡量的，所以很容易茫然无措，觉得自己还需要准备准备，于是就再也没有然后。</p><p>这篇文章是写给那些打算学习Python的人看的，尤其是之前没有任何计算机基础的，希望你们看完之后可以学习Python。</p><h2 id="这篇文章不会谈及"><a href="#这篇文章不会谈及" class="headerlink" title="这篇文章不会谈及"></a>这篇文章不会谈及</h2><ul><li>XXX报错了，我该怎么办。初学者遇到的问题基本上都能用搜索引擎搞定，如果百度搞不定，请用英文关键字去谷歌。如果你问我的问题，是可以搜索引擎找到的，我会慎重考虑<strong>拉黑</strong>你的。</li><li>基于上述这一句话，其实这篇文章也没有必要写。因为你完成可以搜索到许多入门资源，但是考虑大家未必能够甄别，这里强势推荐<a href="http://www.ituring.com.cn/book/1863" target="_blank" rel="external">编程小白的第一本 Python 入门书</a></li></ul><h2 id="什么是Python"><a href="#什么是Python" class="headerlink" title="什么是Python"></a>什么是Python</h2><p>这世界上有很多编程语言，就和人类有不同语言一样，只不过编程语言是用来和计算机交流的。据我粗浅的了解，编程语言可以分为两种：</p><ul><li>编译型，代表的有C, JAVA等。 你需要把代码写好，然后通过编译器翻译成机器语言。也就是说你写好一篇文章，然后把文章<strong>全文翻译</strong>好，然后给别人看。</li><li>解释型， 有R，Python等。所谓解释型，就是同声传译，你一边说，解释器一遍翻译给计算机听，然后计算机给出实时反馈。</li></ul><p>Python是目前比较流行的语言，它的身影出现在各个场景中，目前最火的深度学习有它，传统的web开发，服务器运维有它， 知乎里还有各种用Python写爬虫的教程， 各种培训机构也都拿Python作为噱头（有人吐槽说这是因为培训机构没有能力教C/C++）， 最后我们生物信息学也有biopython.</p><p>因此，Python就是一类<strong>翻译器</strong>，你可以把他看成XX词霸（欢迎植入广告），你查一句，他翻译一句。即便你把全文都打好，他也是一句一句翻译（此处不严谨，只是方便理解而已，因为涉及到字节码）</p><h2 id="如何安装Python"><a href="#如何安装Python" class="headerlink" title="如何安装Python"></a>如何安装Python</h2><p>对于类Unix系统，比如说<strong>Linux</strong>和<strong>macOS</strong>, 你们都会自带一个版本的Python。在Linux中，可以通过<code>whereis python</code>查看Python的安装路径。一般，自带的Python用于执行系统运行相关工作。apt/yum这类软件管理器，或者说conda（anaconda和miniconda的自带的软件管理工具）其实都会采用Python用于记录软件安装，你可以根据conda的报错日志进行判断 。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/89456715.jpg" alt=""></p><p>在Windows中必须要从官方中下载二进制安装包进行安装。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/18768503.jpg" alt=""></p><p><strong>但是</strong>，对于初学者，我建议无论是macOS，还是Linux都可以去安装一款不错的Python科学发行版，anaconda， 下载地址为 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a> （这是国内的清华源，速度会比较快）。作为新手，而且你用Windows的话，你就直接去下载anaconda吧，我进过很多坑，不会骗你的。</p><h3 id="什么是anaconda，-为什么要装anaconda"><a href="#什么是anaconda，-为什么要装anaconda" class="headerlink" title="什么是anaconda， 为什么要装anaconda"></a>什么是anaconda， 为什么要装anaconda</h3><p>很多人问装了anaconda， 还需不需要装Python呀。 这里的<strong>回答</strong>是：不需要。</p><p>因为anaconda是Python的发行版，就像ubuntu是Linux的发行版。Linux的本身就是一个内核，没有软件管理系统，没有可视化界面，当时为了让Linux能够方便使用，所以有些公司就把一些常用软件打包，在安装Linux的时候一起安装，保证了系统能够顺利使用。 （Win7， win8， win10的安装包那么大，就是微软把很多要的，不怎么要的环境都放在一起了）。也就是说anaconda是整合许多python常用包（包，可以理解成扩展功能）简单易用版。</p><p>PS： 其实大家都不太了解Linux的发展历史，但是我觉得还是很有必要了解的。当然换个比喻，目前各种Android产商都会推出自己的手机操作系统， 其实都是对谷歌的原生Android系统进行各种定制。如果某个产商声称自己“开发“了一个新的操作系统， 其实他的意思是让安卓系统更加适合自己家手机的硬件，然后还美化了一下桌面。</p><p><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/34390364.jpg" alt=""></p><blockquote><p>简单介绍一下anaconda自带的几个功能。</p><ul><li>jupyter notebook： 网页版的文本编辑器，能够用tab进行命令补全还有联想，比较适合用于代码试错阶段。</li><li>qtconsole: IPython的图形界面版， IPython是原生Python解释器的功能增强版（也就是vim和vi的区别，智能手机和普通手机的区别）。其实你可以在命令行下输入ipython启动，而且强烈推荐学习它。</li><li>spyder: 这是一种整合开发环境（IDE），常用于Python的数据分析也就是（如果你用Rstudio，你会感到莫名的熟悉感）。可以在左边输入大块代码，进行某一类数据分析，在右下方执行比较少量的代码，然后右上方则是可以在教程，变量管理，文件管理进行切换。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-3/43367479.jpg" alt=""></li></ul></blockquote><p>那么为什么要用anaconda，而不是最基本的python呢？<br>第一： 对于windows而言，很多第三方包的安装真的很麻烦，真的很麻烦，比如说pandas和scipy等。新手最重要的是运行，而不是瞎折腾。</p><p>第二： 在类Unix系统中，系统自带的python一般是2.7版，而现在趋势是用3.x版本的python。既然我们需要装一个3.x版本的Python， 就考虑anaconda吧。anaconda还可以进行python版本管理，自由切换不同版本的Python环境。</p><blockquote><p>很多同学会纠结到底到底是哪个版本，这里我的答案就是用3.x。如果你问我为什么不去学2.7， 我的回答只有一个，你需要的时候再去学不就行了。就像你学汽车，你问教练到底是手动挡，还是自动挡。你学会开车不就行了，原理都是共通的，上路最重要。你纠结版本半天，还不如敲上几十行代码实在。</p></blockquote><p>第三: 对于Windows而言，Python不是必须的。但是对于macOS和Linux而言，系统的Python一般是负责软件安装等其他任务的。作为新手，装一个anaconda，那么根据环境变量的顺序，默认会使用anaconda的python，就不要对系统的Python动手了，免得出事情。</p><p>第四：anaconda提供了conda用于管理软件安装。对于非root的用户而言，对于mac用户而言，它提供了一种方便的软件管理方式, 添加不同的频道，就可以安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">conda install</div><div class="line">conda update</div><div class="line">conda upgrae</div></pre></td></tr></table></figure><p></p><h2 id="如何运行Python"><a href="#如何运行Python" class="headerlink" title="如何运行Python"></a>如何运行Python</h2><p>运行Python最重要的一步就是把代码解释给计算机听，所以我们安装Python，其实安装的就是<strong>解释器</strong>。其实下面的本质可以看成下面简陋的界面。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/14326750.jpg" alt=""></p><p>你可以和它打个招呼(&gt;&gt;&gt;表示这一行是你的输入行)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; print(&quot;hello world&quot;)</div><div class="line">hello world</div></pre></td></tr></table></figure><p></p><p>然后你可以把它当做计算器，<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; 10*8</div><div class="line">80</div></pre></td></tr></table></figure><p></p><p>如果你成功运行了以上命令，其实你已经在编程了。</p><p>一行一行输入，也不是不可以，就是如果<strong>输错了</strong>，就得重新来一遍，而且关闭了命令行（学习生信，请和命令行做朋友）就啥都没有了。</p><p>所以我们需要专门建立一个文本，在里面存放代码，比如说我用Windows自带的记事本（一定要用纯文本，一定要用纯文本，一定要用纯文本），写了几行代码。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/70682783.jpg" alt=""></p><p>然后我在命令行里运行</p><p><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/27020778.jpg" alt=""></p><p><strong>注1</strong>： 你可能会发现，我的文件名叫做hello.txt， 而不是常见的xxx.py。 原因是解释器只负责解释输入的内容，而不会管他到底是格式。后缀只不过是用于让人类方便判断而已，计算机只管里面的内容。<br><strong>注2</strong>： 所有文件都要保存在某个系统路径上才能保证下次被使用，上面的spyder默认建立了一个tmp.py，请恰当改名符合你的需求。</p><h2 id="文本编辑器和IDE"><a href="#文本编辑器和IDE" class="headerlink" title="文本编辑器和IDE"></a>文本编辑器和IDE</h2><p>人总是懒的， 希望敲一个代码的前几个就能<strong>联想</strong>出整个命令，希望能够自动换行。于是就有了各种文本编辑器，还有对应的插件。文本编辑器，简单的说，就是之前简陋的记事本的功能增强版。比如说我用的Visual Studio Code(其实我还用过sublime和atom， vim的插件用的不太好)，还提供语法高亮。</p><p><img src="http://oex750gzt.bkt.clouddn.com/17-8-2/38206581.jpg" alt=""></p><p>你们可能会问，选择什么样的文本编辑器呀, 下图来自于<a href="https://www.sitepoint.com/which-code-editors-do-pythonists-use/" target="_blank" rel="external">Pythonists使用什么样的文本编辑器</a>。<br><img src="http://oex750gzt.bkt.clouddn.com/17-8-3/50595586.jpg" alt=""><br>更加简单粗暴的答案就是Windows用notepad++， Linux和mac用sublime或atom。没有任何原因，单纯个人看法。</p><p>当然更近一步，当你的代码写到几百行的时候，调试代码的时候，我们需要一个工具能够告诉我们哪里出错了，或者在写代码的时候就能自动检查。这就是IDE（integer development environment）， 更强大的工具。IDE有如下选择</p><ul><li>Eclipse + PyDev插件，</li><li>Python Tools for Visual Studio</li><li>PyCharm</li><li>Spyder</li><li><p>…</p><p>对于编程语言初学者，我就不建议你们用了。个人推荐就是用Ipython测试你写在纯文本里面的代码， 然后用命令行运行，测试整体。等你写了一定量的代码后，你在用IDE也不迟。</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>读完这篇文章，我希望你知道如下几点内容：</p><ul><li>Python的本质是解释器，而不是所谓的文本编辑器，或者IDE</li><li>anaconda是Python的发行版，整合了许多常用的包，建议安装</li><li>文本编辑器的目的是让我们快速，已经安心的写代码，能即使代码的错误。</li><li>IDE不建议新手用，这只是个人看法，你认为是偏见也好， 完全可以无视掉。</li><li>我希望你读完这篇文章之后，不要纠结选什么版本，下载最新的anaconda装上去就好了（目前是3.6），不要纠结用什么编辑器，notepad++或者sublime Text就行。</li></ul><p>如果你打算继续学Python，希望我推荐什么教材的话，我推荐初学者用</p><ul><li><a href="http://www.ituring.com.cn/book/1863" target="_blank" rel="external">编程小白的第一本 Python 入门书</a></li><li><a href="https://learnpythonthehardway.org/" target="_blank" rel="external">笨方法学Python</a></li><li><a href="https://python.swaroopch.com/" target="_blank" rel="external">a byte of Python</a></li></ul><p>随便选一本看，但是第一本是更加面向初学者，画风也很好看，也是我小白阶段看的书。进阶的话，可以去看流畅的python，python核心编程，选择很多。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习一项技能最困难的阶段就是如何&lt;strong&gt;开始&lt;/strong&gt;， 这无异于是进入新的世界，接触的东西都是很难用过去经验进行衡量的，所以很容易茫然无措，觉得自己还需要准备准备，于是就再也没有然后。&lt;/p&gt;&lt;p&gt;这篇文章是写给那些打算学习Python的人看的，尤其是之前
    
    </summary>
    
      <category term="Python" scheme="https://xuzhougeng.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://xuzhougeng.github.io/tags/Python/"/>
    
      <category term="Anaconda" scheme="https://xuzhougeng.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>7月写字总结</title>
    <link href="https://xuzhougeng.github.io/2017/08/01/july-writing-record/"/>
    <id>https://xuzhougeng.github.io/2017/08/01/july-writing-record/</id>
    <published>2017-08-01T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>其实这个写字总结应该是昨天（也就是在8月1日）比较合适，但是由于回家奔波，加上家里断网，于是就只能今天写了。</p><ol><li><a href="http://mp.weixin.qq.com/s/gliPx0ThPBXLPPF3Ze89rw" target="_blank" rel="external">落入窠(ke)臼(jiu)：GATK best practice每个步骤都是必须的吗？</a> 316</li><li><a href="http://mp.weixin.qq.com/s/4-rZrrmcFvK0wO5dzg1IvQ" target="_blank" rel="external">D2多巴胺受体和王者荣耀</a> 327</li><li><a href="http://mp.weixin.qq.com/s/7ZBySq9Z728GU1y11zPK7A" target="_blank" rel="external">Python如何解析fasta格式，并储存为字典？</a> 456</li><li><a href="http://mp.weixin.qq.com/s/KCqCQBkeMlneE1crvSKYZA" target="_blank" rel="external">深入学习ggtree: read.tree()是如何解析newick数据格式</a> 379</li><li><a href="http://mp.weixin.qq.com/s/42xYwqF49BB9ljlcZnJcIw" target="_blank" rel="external">（伪）从零开始学转录组：软件安装</a> 1125</li><li><a href="http://mp.weixin.qq.com/s/azx1mEUaSGvqmDrxRdsLXg" target="_blank" rel="external">（伪）从零开始学转录组：读文章拿到测序数据</a> 761</li><li><a href="https://mp.weixin.qq.com/s/6p42PSHOwzTiennZY-Zckw" target="_blank" rel="external">世上没有白走的路，每一步都算数</a> 602 conda的使用说明</li><li><a href="http://mp.weixin.qq.com/s/4vZVgVUTCsLDs5DVCGO4MA" target="_blank" rel="external">我的转录组学习小书</a></li><li><a href="http://mp.weixin.qq.com/s/QVvfD9dIphRdE1RVkRpjdg" target="_blank" rel="external">（伪）从零开始学转录组（5） 序列比对</a> 1357 发在生信技能书</li><li><a href="http://mp.weixin.qq.com/s/R-2RII3dTebVX9CrtRoBzg" target="_blank" rel="external">（伪）从零开始学转录组：了解参考基因组及基因注释</a> 420</li><li><a href="http://mp.weixin.qq.com/s/RolngZkua6GJboHQMfP52w" target="_blank" rel="external">转录组入门(6)： reads计数</a> 423</li><li><a href="http://mp.weixin.qq.com/s/1mda7NpOxShbOxZKSJar7Q" target="_blank" rel="external">（伪）从零开始学转录组（7）：差异基因表达分析</a> 554</li><li><a href="http://mp.weixin.qq.com/s/p-n5jq5Rx2TqDBStS2nzoQ" target="_blank" rel="external">(伪）从零开始学转录组（8）：富集分析</a> 424</li><li><a href="http://mp.weixin.qq.com/s/cLslno9uTrndSo1LyM5_4A" target="_blank" rel="external">写了100多个shell脚本的老司机的翻车之旅</a> 624</li><li><a href="http://mp.weixin.qq.com/s/-Xw2W1mp0o73d5MOgaLuGQ" target="_blank" rel="external">你知道什么叫做BLAST吗</a> 247</li><li><a href="http://mp.weixin.qq.com/s/hCeppm0xXQ_WRmPC7FhV7g" target="_blank" rel="external">如何得到贵人相助</a> 482</li><li><a href="http://mp.weixin.qq.com/s/1HOQ8J2vs-lEwdVAxeNiyQ" target="_blank" rel="external">​什么，你嫌bioconda下载速度太慢？</a> 386</li><li><a href="http://mp.weixin.qq.com/s/U4QK5RSvl2kjmuJI5uS8RA" target="_blank" rel="external">如何快速入门生物信息学</a> 2129</li><li><a href="http://mp.weixin.qq.com/s/Ze5BLGitTPTLAq-bpvpHwg" target="_blank" rel="external">生信工作咨询速递-民以食为天，生信大法好</a> 974</li><li><a href="http://mp.weixin.qq.com/s/onVHCjHDU3oGgRzHdklYpw" target="_blank" rel="external">生信工作咨询速递-怎么又是single cell？</a> 724</li><li><a href="https://mp.weixin.qq.com/s/-029moYqN_nMA-wXUt6fQw" target="_blank" rel="external">生信工作资讯速递-single已成潮流</a> 1145</li></ol><p>差不多在微信公众号平台上，我就写了21一篇文章。还有一些是发在简书上的，还有的是在笔记里面，就不列举了。在21篇文章中，我写了一篇关于<strong>王者荣耀</strong>的文章，这是唯一一篇不是技术性的文章，受那个时间段众多公众号议论纷纷，然后刚好又看到万维钢的一篇文章。其实写的挺差的，写技术性文章，至少可以按照操作过程来，但是写这种议论性文章，就需要很强的逻辑性，还需要我不断的练习。</p><p>这个月会写多少篇，其实也是一个未知数。毕竟学到啥，就写啥。不过尽量要写点非技术类的文章，练习自己的逻辑思考能力。</p><p>还有在家学车，估计是没有多少时间写作了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实这个写字总结应该是昨天（也就是在8月1日）比较合适，但是由于回家奔波，加上家里断网，于是就只能今天写了。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s/gliPx0ThPBXLPPF3Ze89rw&quot; target=&quot;_bla
    
    </summary>
    
    
      <category term="retrospect" scheme="https://xuzhougeng.github.io/tags/retrospect/"/>
    
  </entry>
  
  <entry>
    <title>如何配置NexT主题</title>
    <link href="https://xuzhougeng.github.io/2017/07/30/how-to-DIY-NeXt/"/>
    <id>https://xuzhougeng.github.io/2017/07/30/how-to-DIY-NeXt/</id>
    <published>2017-07-30T16:00:00.000Z</published>
    <updated>2017-08-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了半天，终于标签和分类能用了。<br><a id="more"></a></p><p>嫌麻烦可以fork一份 <a href="https://github.com/aak1247/hexo-theme-one" target="_blank" rel="external">https://github.com/aak1247/hexo-theme-one</a> 然后在此基础上进行修改。</p><h2 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改<code>_config.yml</code></h2><p>要修改的内容如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">keywords:</div><div class="line">menu: 选择你自己需要的，不需要的用#注释掉</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  #about: /about</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div><div class="line">  #issue: /issue</div><div class="line">  #works: /works</div><div class="line">  sitemap: /sitemap.xml</div><div class="line">  #commonweal: /404.html</div><div class="line">social: #替换成自己的地址</div><div class="line">Blogrolls: # 按需修改 </div><div class="line">leancloud_visitors: </div><div class="line">  enable: false</div><div class="line"></div><div class="line"># 在source/images/ 下替换成合适的图片</div><div class="line">reward_comment: &quot;觉得有用的话赞助一点吧~&quot;</div><div class="line"># 或者放图床地址</div><div class="line">wechatpay: /images/wechatpay.png</div><div class="line">alipay: /images/alipay.jpg</div></pre></td></tr></table></figure><p></p><p>另外注释掉所有和多说有关的信息</p><p>上面几步做完之后，页面就挺好看的啦，后面在进行个性化的定制。</p><h1 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h1><p>如果没有人在博客下留言， 就真的应了那句话，“所谓博客，就是孤芳自赏了”。 由于多说不干了，网易云跟帖也要关闭服务了，于是就只能用disqus（要翻墙）了。<br>修改配置文件的disqus为true， 然后你还需要注册disqus，获取shortname<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">disqus:</div><div class="line">  enable: true</div><div class="line">  shortname:</div><div class="line">  count: true</div></pre></td></tr></table></figure><p></p><h1 id="谷歌分析"><a href="#谷歌分析" class="headerlink" title="谷歌分析"></a>谷歌分析</h1><p>既然都要翻墙，不如再来一个谷歌分析吧。获取跟踪ID，一般是UA-xxxx<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Google Analytics</div><div class="line">google_analytics:</div></pre></td></tr></table></figure><p></p><h1 id="内容分享"><a href="#内容分享" class="headerlink" title="内容分享"></a>内容分享</h1><p>这个很简单<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">baidu_push: true</div></pre></td></tr></table></figure><p></p><h1 id="搜索服务"><a href="#搜索服务" class="headerlink" title="搜索服务"></a>搜索服务</h1><p>在.travis.yml里的before_install中添加<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p></p><p>然后在站点配置文件（也就是blog）中添加如下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure><p></p><p>然后在主题配置文件里启用<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">local_search:</div><div class="line">  enable: true</div></pre></td></tr></table></figure><p></p><h1 id="美化页面"><a href="#美化页面" class="headerlink" title="美化页面"></a>美化页面</h1><p>关于hexo主题的美化，其实已经有很多文章了，所以下面就列举我参考过的网站</p><ul><li><a href="https://ijiaober.github.io/categories/hexo/" target="_blank" rel="external">https://ijiaober.github.io/categories/hexo/</a></li><li><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">http://theme-next.iissnan.com/theme-settings.html</a></li><li><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="external">http://blog.csdn.net/qq_33699981/article/details/72716951</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了半天，终于标签和分类能用了。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://xuzhougeng.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://xuzhougeng.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>这个博客是如何搭建的</title>
    <link href="https://xuzhougeng.github.io/2017/07/29/how-to-build-this-blog/"/>
    <id>https://xuzhougeng.github.io/2017/07/29/how-to-build-this-blog/</id>
    <published>2017-07-29T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>这个博客的搭建之路</p><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><ul><li>git: <a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a></li><li>node.js: <a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></li><li>hexo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># git</div><div class="line">sudo apt-get install git</div><div class="line"># conda install git</div><div class="line"></div><div class="line"># node.js</div><div class="line"># use nvm to install node.js</div><div class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class="line">nvm install stable</div><div class="line">## add taobao mirrors to speed downloading</div><div class="line">alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \</div><div class="line">--cache=$HOME/.npm/.cache/cnpm \</div><div class="line">--disturl=https://npm.taobao.org/dist \</div><div class="line">--userconfig=$HOME/.cnpmrc&quot;</div><div class="line"># hexo</div><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure><a id="more"></a><h2 id="安装软件-1"><a href="#安装软件-1" class="headerlink" title="安装软件"></a>安装软件</h2><ul><li>git: <a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a></li><li>node.js: <a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></li><li>hexo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># git</div><div class="line">sudo apt-get install git</div><div class="line"># conda install git</div><div class="line"></div><div class="line"># node.js</div><div class="line"># use nvm to install node.js</div><div class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class="line">nvm install stable</div><div class="line">## add taobao mirrors to speed downloading</div><div class="line">alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \</div><div class="line">--cache=$HOME/.npm/.cache/cnpm \</div><div class="line">--disturl=https://npm.taobao.org/dist \</div><div class="line">--userconfig=$HOME/.cnpmrc&quot;</div><div class="line"># hexo</div><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure><p>检查是否安装成功：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">hexo -v</div><div class="line"># 以下是输出，有内容就行</div><div class="line">hexo-cli: 1.0.3                                        </div><div class="line">os: Linux 4.4.0-43-Microsoft linux x64                 </div><div class="line">http_parser: 2.7.0                                     </div><div class="line">node: 8.2.1                                            </div><div class="line">v8: 5.8.283.41                                         </div><div class="line">uv: 1.13.1                                             </div><div class="line">zlib: 1.2.11                                           </div><div class="line">ares: 1.10.1-DEV                                       </div><div class="line">modules: 57                                            </div><div class="line">openssl: 1.0.2l                                        </div><div class="line">icu: 59.1                                              </div><div class="line">unicode: 9.0                                           </div><div class="line">cldr: 31.0.1                                           </div><div class="line">tz: 2017b                                              </div><div class="line">xzg@DESKTOP-CNF0I9C:~$</div></pre></td></tr></table></figure><p></p><p>具体的官方文档： <a href="https://hexo.io/docs/" target="_blank" rel="external">https://hexo.io/docs/</a> 提供了macOS Linux 和Windows平台的安装方法。</p><h2 id="Hexo建立第一个博客"><a href="#Hexo建立第一个博客" class="headerlink" title="Hexo建立第一个博客"></a>Hexo建立第一个博客</h2><p>第一步：在本地新建一个文件夹，初始化hexo:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir xuzhougeng</div><div class="line">cd xuzhougeng</div><div class="line">git init xuzhogueng</div></pre></td></tr></table></figure><p></p><p>初始化之后, 会得到如下内容：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml # 存在网站的配置信息</div><div class="line">├── package.json # 存放应用程序信息， 使用npm install 安装</div><div class="line">├── scaffolds # 存放模板，</div><div class="line">├── source # 存放用户资源</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes # 存放主题</div></pre></td></tr></table></figure><p></p><p>第二步： 安装应用程序<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure><p></p><p>第三步： 发布第一个博客<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo new hello-world.md</div><div class="line"># INFO  Created: /mnt/e/xuzhougeng/source/_posts/hello-world-md.md</div><div class="line"># 可在里面说些什么，也可以什么都不做</div><div class="line">hexo generate</div></pre></td></tr></table></figure><p></p><p>第四步： 本地预览<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server # hexo s</div></pre></td></tr></table></figure><p></p><p><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/620386.jpg" alt=""></p><h2 id="部署到GitHub-Page"><a href="#部署到GitHub-Page" class="headerlink" title="部署到GitHub Page"></a>部署到GitHub Page</h2><p>如果你有一台服务器，基本上就不需要这一步了。但是服务器实在不便宜，好在有免费的GitHub page给我们用。<br>再继续之前，建议你去看一下Git的教程： <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a><br>还有GitHub Page的介绍： <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></p><p>反正不管如何，你先得到GitHub上 (<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a>) 申请一下账号，然后新建一个托管网页的库<br><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/18924627.jpg" alt=""><br><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/66854364.jpg" alt=""></p><p>如果你上面的git教程没时间看完， 至少把里面的关于远程库的内容看了，保证你的电脑被GitHub认证了。<br>大致步骤是在本地生成SSH秘钥, 一路回车哦<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</div></pre></td></tr></table></figure><p></p><p>查看本地SSH秘钥，并且复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/77971997.jpg" alt=""><br>借用一下git教程的图，SSH秘钥复制到图中位置。</p><p><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/34958163.jpg" alt=""><br>之后要安装hexo的git插件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo -server --save</div><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure><p></p><p>修改配置文件，增加部署部分<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。</div><div class="line">## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo:</div><div class="line">      github: git@github.com:xuzhougeng/xuzhougeng.github.io.git,master</div></pre></td></tr></table></figure><p></p><p>部署到github上<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line"># 可选，本地预览</div><div class="line">hexo server</div><div class="line"># hexo deploy</div></pre></td></tr></table></figure><p></p><p>小功告成，保证的远程库下是下面这个样子<br><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/17073006.jpg" alt=""></p><h2 id="优雅的使用Hexo"><a href="#优雅的使用Hexo" class="headerlink" title="优雅的使用Hexo"></a>优雅的使用Hexo</h2><p>但是，如果在一台新电脑上使用hexo的时候，还是需要装各种软件。此外如果从GitHub克隆已有库到本地，还不能直接用。根据zccz14的博文<a href="https://zccz14.com/2016/12/30/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8Hexo/" target="_blank" rel="external">优雅地使用 Hexo</a>， 是该用Travis CI自动化部署了。</p><p>我们需要两个仓库： 一个命名为username.github.io，一个随意，比如说叫做blog</p><p>在<a href="https://travis-ci.org/" target="_blank" rel="external">Travis CI</a>上注册并关联GitHub账号。然后在Travis CI中添加对blog对关联。<br><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/94272214.jpg" alt=""></p><p>然后在Travis CI blog的setting中做如下配置</p><ol><li>确保 Build only if .travis.yml is present, Build pushes, Build pull requests 处于打开状态。</li><li>增加环境变量： GITHUB_USERNAME: GitHub 的用户名, GITHUB_TOKEN: GitHub 令牌, GITHUB_EMAIL: GitHub 的邮箱, THEME_URI: 主题的URI, THEME_NAME: 主题名</li></ol><p>本地对同步GitHub的blog仓库<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:xuzhougeng/blog.git</div></pre></td></tr></table></figure><p></p><p>从之前初始化的hexo项目中把<code>package.json</code>和<code>_config.yml</code>拷贝到同步的仓库中，新建一个<code>source/_posts/</code>存放用于发布的文章，复制一份官方博文到该目录下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cp _config.yml  package.json ../blog/</div><div class="line"># source/_posts 目录下的Markdown文件都会被渲染成文章</div><div class="line">mkdir -p source/_posts/</div><div class="line"># or</div><div class="line">cp -r source/_posts/hello-world.md ../blog/</div></pre></td></tr></table></figure><p></p><p>最重要的一步就是在blog下增加<code>.travis.yml</code>。这个文件告诉了Travis CI该如何部署。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">language: node_js</div><div class="line">node_js:</div><div class="line">    - &quot;6&quot;</div><div class="line">before_install:</div><div class="line">    - git config --global user.email $GITHUB_EMAIL</div><div class="line">    - git config --global user.name $GITHUB_USERNAME</div><div class="line">    - npm i hexo-cli -g</div><div class="line">    - git clone $THEME_URI themes/$THEME_NAME</div><div class="line">script:</div><div class="line">    - hexo config theme $THEME_NAME</div><div class="line">    - hexo generate</div><div class="line">after_success:</div><div class="line">    - cd public</div><div class="line">    - git init</div><div class="line">    - git add .</div><div class="line">    - git commit -m &quot;Travis Deploy&quot;</div><div class="line">    - git push -f -q https://$GITHUB_TOKEN@github.com/$GITHUB_USERNAME/$GITHUB_USERNAME.github.io master</div></pre></td></tr></table></figure><p></p><p>这些都是共性部分，而下面的则是自定义部分。</p><h2 id="主题分离"><a href="#主题分离" class="headerlink" title="主题分离"></a>主题分离</h2><p>在<code>.travis.yml</code> 里面<code>- git clone $THEME_URI themes/$THEME_NAME</code> 部分就是获取主题所在GitHub地址，然后用<code>hexo config theme $THEME_NAME</code> 修改原先的主题。</p><p>我这里就先fork别人的主题.于是就需要在traiv CI修改<code>https://github.com/xuzhougeng/hexo-theme-next</code></p><p>这是一个非常常用的主题，然后也有很多方案介绍如何修改，修改方案，见 <a href="https://zhuanlan.zhihu.com/p/28128674" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/28128674</a></p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>写作就是在<code>source/_posts/</code>下新建一个markdown文件，然后在里面以markdown语法进行写作就好了。<br>唯一比较烦人的问题就是如何处理图片的问题，目前我用的是七牛+极简图床</p><h2 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h2><ul><li><p>页面内嵌PDF</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--more--&gt;</div><div class="line">&lt;iframe src=&quot;your_pdf_url&quot; style=&quot;width:100%; height:800px&quot;&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></li><li><p>内嵌网页云音乐</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=562010&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个博客的搭建之路&lt;/p&gt;&lt;h2 id=&quot;安装软件&quot;&gt;&lt;a href=&quot;#安装软件&quot; class=&quot;headerlink&quot; title=&quot;安装软件&quot;&gt;&lt;/a&gt;安装软件&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;git: &lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt;&lt;li&gt;node.js: &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;hexo&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# conda install git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# node.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# use nvm to install node.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nvm install stable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## add taobao mirrors to speed downloading&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alias cnpm=&amp;quot;npm --registry=https://registry.npm.taobao.org \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--cache=$HOME/.npm/.cache/cnpm \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--disturl=https://npm.taobao.org/dist \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--userconfig=$HOME/.cnpmrc&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# hexo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g hexo-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://xuzhougeng.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>每周回顾(2017/7/24-7/30)</title>
    <link href="https://xuzhougeng.github.io/2017/07/29/retrospect-2017-7-24-to-7-30/"/>
    <id>https://xuzhougeng.github.io/2017/07/29/retrospect-2017-7-24-to-7-30/</id>
    <published>2017-07-29T16:00:00.000Z</published>
    <updated>2017-08-27T13:29:26.107Z</updated>
    
    <content type="html"><![CDATA[<p>这一周尝试每天都做回顾，于是就有将近8000多个字符的内容被我写了出来，就可以有选择的挑选出自己觉得有意义的东西了。</p><h2 id="看到"><a href="#看到" class="headerlink" title="看到"></a>看到</h2><p>首先我看到了那些内容，之前是在每周日回顾这一周看到的内容，于是遗漏了很多内容，这一次就比较全了。</p><h3 id="非技术类"><a href="#非技术类" class="headerlink" title="非技术类"></a>非技术类</h3><p><a href="http://mp.weixin.qq.com/s/vmkaSk1apx4ESDTL1DNaXA" target="_blank" rel="external">如何正确地后悔？</a> 这是投资者对待错误的正确选择：1、承认过去做错了；2、现在做对的事。过去的错误是让你现在更容易正确。</p><blockquote><p>后悔是指当时自己觉得是对的，想去做，但是由于家庭原因等阻拦导致自己没有去做，事后证实自己当初判断是对的情况。<br>为什么不应该后悔？<br>第一：当初不去做，是因为那个时候能力不够，信心不足，所以那个机会不属于你。<br>第二：我们认为的对的，然是结果是错的情况，你没有记录。当你感觉自己遭到不公正的待遇的时候，请思考一下自己一直都被不公正对待吗？</p></blockquote><p><a href="http://mp.weixin.qq.com/s/lLFf_Kfh7luXceDCTp5STA" target="_blank" rel="external">知识付费这两年，我花5000元买的4个教训</a> ：作者想说的就是“践行”很重要，多读经典，很多概念就是换汤不换药</p><blockquote><p>经典书籍是<strong>元知识</strong>， 能够不断派生<strong>热知识</strong>。 不断阅读那些被无数前人推荐，验证的书籍，从中推演，反而比一味求那些新潮概念更加快捷。<br>大多数人的知识付费只是买止痛药，麻醉药。疼痛感没了，但是问题依旧存在。</p></blockquote><a id="more"></a><h2 id="看到-1"><a href="#看到-1" class="headerlink" title="看到"></a>看到</h2><p>首先我看到了那些内容，之前是在每周日回顾这一周看到的内容，于是遗漏了很多内容，这一次就比较全了。</p><h3 id="非技术类-1"><a href="#非技术类-1" class="headerlink" title="非技术类"></a>非技术类</h3><p><a href="http://mp.weixin.qq.com/s/vmkaSk1apx4ESDTL1DNaXA" target="_blank" rel="external">如何正确地后悔？</a> 这是投资者对待错误的正确选择：1、承认过去做错了；2、现在做对的事。过去的错误是让你现在更容易正确。</p><blockquote><p>后悔是指当时自己觉得是对的，想去做，但是由于家庭原因等阻拦导致自己没有去做，事后证实自己当初判断是对的情况。<br>为什么不应该后悔？<br>第一：当初不去做，是因为那个时候能力不够，信心不足，所以那个机会不属于你。<br>第二：我们认为的对的，然是结果是错的情况，你没有记录。当你感觉自己遭到不公正的待遇的时候，请思考一下自己一直都被不公正对待吗？</p></blockquote><p><a href="http://mp.weixin.qq.com/s/lLFf_Kfh7luXceDCTp5STA" target="_blank" rel="external">知识付费这两年，我花5000元买的4个教训</a> ：作者想说的就是“践行”很重要，多读经典，很多概念就是换汤不换药</p><blockquote><p>经典书籍是<strong>元知识</strong>， 能够不断派生<strong>热知识</strong>。 不断阅读那些被无数前人推荐，验证的书籍，从中推演，反而比一味求那些新潮概念更加快捷。<br>大多数人的知识付费只是买止痛药，麻醉药。疼痛感没了，但是问题依旧存在。</p></blockquote><p><a href="http://mp.weixin.qq.com/s/W_ShpOvU-9YDf40SIzeKVA" target="_blank" rel="external">我没有5套房，可我活得挺好</a> : 人情冷漠不一定是坏事，反而说明市场化程度很高。如果以后建议去哪里读大学，一律推荐大城市，城市的观念升级的作用远大于一些不入流一本大学的学位价值。</p><p><a href="http://mp.weixin.qq.com/s/fWFAz53mkTJ1N8EbWQ5P7Q" target="_blank" rel="external">写在比特币分叉之前</a> 在投资领域，可以说大部分人都是投机者，而对于投机者而言，一点波动，就会觉得世界翻天覆地了。 因此，如果你笃信并且通过逻辑证实了，那么就应该坚持下去，等到下一个牛市到来，你才学会投资。</p><p><a href="http://mp.weixin.qq.com/s/EVSuIijXPpSLJO9Z1I27OA" target="_blank" rel="external">孤独棋士（剧照版）</a> 有趣的文章，讲的是alphaGo和一些围棋手的故事。</p><p>得到专栏，<strong>执行力的根源究竟在哪里</strong>： 所谓的执行力，就是指一个人能否清楚的知道怎么一步一步做下去。<br><img src="http://oex750gzt.bkt.clouddn.com/17-7-30/63628500.jpg" alt=""><br>但是大部分人最大的问题就是在一些比较必要的事情上明知道要做不去做，或者是做到一半就半途而废。而在一些不那么必要的习惯上，比如说玩手机，却是不用别人督促都能每隔一会儿看一下。<br>这一切的根源就在于，人不是只有一个自我，还有本我和超我。用苏格拉底的比喻就是，一个骑手（元认知）驾驭者两匹长着翅膀的白马（情绪）和黑马（直觉）行动一样。由于身体构造，所以最快行动的总是黑马，而不是骑手。但是直觉是情绪的快捷方式，情绪是理智的快捷方式。就像玩手机这个动作，也是不断通过元认知重复，以至于直觉都能不由自主的拿起手机。 还比如说有些人遇到紧急情况能够有序的处理问题，但是大多数人确实“空白一片”，也是因为直觉和情绪消耗光了能量，导致耗能也比较严重的理智因为供能不足宕机了。<br>为了让理智在情绪和直觉上建立快捷方式，就必须不断重复和应用，也就是践行。让大脑形成回路，这样子我们也不需要坚持去做某件事情了，因为这显示是多么的自然。</p><p><a href="http://mp.weixin.qq.com/s/DbZNAYu7mFZ7X1TmeyzdeA" target="_blank" rel="external">阶层固化的时代，还有什么能让你突围？</a> 阶级固化是一个“自证预言”，你认为阶级固化，努力徒劳，所以放弃抵抗，那么在你看来阶级就真的固化了。如果你认为阶级没有固化，继续努力前行，那么你还有一线转机。 别人将经验整理成书，而从书中学习多少也依赖于人生经历，但是必须要有一点清晰的认知，你只有认为它和你是有联系的，你才不会错过一次升级。</p><p>即便在帝制时代，阶层都没有真的关闭，文人还能通过科举制度进入管理层。在美国，阶层的确存在固化的倾向。而在中国，由于当下的政治制度和氛围，使得阶层上升的可能性高于美国。穷人和富人的差距不仅仅在资产上，更是环境因素，身体因素，心智因素等多方面的差异。尤其在心智上，穷人难以感受到富人阶级的思维习惯。还好心智上通过刻意练习也能克服。</p><p><a href="http://mp.weixin.qq.com/s/sWyRJLLf6oqlXt3JqD1XqA" target="_blank" rel="external">没有存在感，活该做只单身狗</a>： 懂得给自己贴标签，分为如下步骤：</p><ol><li>回顾自己的兴趣点；</li><li>找到对应的组织（或社群）；</li><li>与这个领域的牛人或从业者成为朋友，在沟通中让自己比普通爱好者更进一步；</li><li>最后是输出，让他人知道你的这个标签。</li></ol><p>特别意外的是，我居然不知布局就做到了这四步。 我对概率论比较感兴趣， （被动）加入了班级， 然后与助教有一定交流， 然后我写了好几篇概率论的文章，让别人都认为我统计学很强。</p><p><a href="http://mp.weixin.qq.com/s/l4W83795ctARbJssFnK05g" target="_blank" rel="external">《你35岁，身体越来越差》</a>: 看到最后，感慨一生匆匆过。</p><p><a href="http://mp.weixin.qq.com/s/kKIHIADEi-dGfrPB3COAsQ" target="_blank" rel="external">为国争光，还是为我争光？</a> 真正的强者是把自信建立在自己身上。民族自豪感，其实不是一个非常好的概念。我认为，更好的概念是个人自豪感，要为自己的行为负责。 也就是说保证每个局部最优，在某种程度上会保证全局最优。</p><blockquote><p>一个人越不自信，就越是想沾八竿子打不着的光：我们都是一个姓的，我们都是一个乡的，我们都是北京的，我们都是中国人，我们都是人类……</p><p>所以当一同沾光变成了一起丢脸，很多人就会恼羞成怒：本以为你是个英雄，呸，去参加残奥会吧。似乎凑在一起骂完才能解气。</p></blockquote><p><a href="http://mp.weixin.qq.com/s/vHqcCO20WiHHEkEA2LNEpw" target="_blank" rel="external">管理者的无用功：靠加班、靠团建、靠个人</a>: 加班，通过延长工作时间，也就是根据过程来缓解焦虑，是第一种无用功。根据经济学，我们鼓励什么，就会得到什么，很有可能是<strong>非期然后果</strong>。 你无法判断脑力劳动者在加班期间想的事情是不是和工作有关。 企业的氛围越好，效率反而会越低。 高效能士喜欢就事论事。 如果一个人在一个企业中是不可或缺的，那么这个企业一定存在问题。能力高估，管理者自身有问题， 管理上有问题。</p><p><a href="http://mp.weixin.qq.com/s/AJLlZGbzanuoy7WtTkcf8Q" target="_blank" rel="external">晴予：关于网游和人生的 10 条心得</a>: 王者一定很荣耀，但是玩王者荣耀的人未必。 不要以为在网络游戏中能学到啥，这些时间放在读书上比你花在网游的时间值。</p><p>王维纲-《万万没想到》</p><ul><li><strong>反常识思维</strong>：文人追求美，而理工则是在tradeoff之间寻求合理的解决方法</li><li><strong>别想说服我</strong>： 每个人都两种模式，律师模式和科学家模式。前者先有结论找证据，后者有证据找到合适的解释。大部人都是律师模式，于是媒体就利用这一特点，制造符合你消费需求的新闻，满足你的人性需求。</li><li><strong>真理追求者</strong>： 这一篇有一段话特别有意思， 我摘录了下来<blockquote><p>如果是两个理性而真诚的真理追求者争论问题，争论的结果必然是两人达成一致。换句话说，如果争论结果最后不欢而散，那么其中必然有一方是虚伪的。<br>If two people have the same priors, and their posteriors for an event A are common knowledge, then posteriors are qual.</p></blockquote></li></ul><p>也就是，如果两个人对某一件事情的定义是一致的，即便是不一致，通过几番的讨论之后，总能达成一致。而目前大多数人的争论，早已不是为了自己的观点，而是为了维护自己的脸面。这就是解释了，为什么李笑来在《新生，七年就是一辈子》里提出自己不再争论，而是等时间证明的原因。</p><ul><li><p><strong>坏比好重要</strong>： 这一篇主要讲的是<strong>损失厌恶</strong>， 人们更容易记住别人的缺点，而不是别人的优点。这也就是解释了，我们什么在吵架的时候热衷于算旧账。还有一个观点，进化心理学认为恐惧来自于人的自我保护本能，而毛线来自于人的求偶本能。</p><blockquote><p>恐惧使人害怕损失，浪漫是人热爱冒险。</p></blockquote></li><li><p><strong>最简单概率论的五个智慧</strong>：会做概率论的题目，却未必能理解概率论，要想在现代社会活得好，就必须理解概率论。作者认为以下五个非常重要：</p><ul><li>随机： 有些事情的发生就是没有规律可循的，有些情况就是意外。不要为了一些小概率事件，大惊小怪</li><li>误差：真实世界是存在误差的，但是可以通过多次检测计算平均值。</li><li>赌徒谬论：错误的理解大数定理和随机性的关系。</li><li>在没有规律的地方发现规律。如果数据足够大，我们总能找到自己需要的规律，比如说圣经密码</li><li>小数定律： 数据足够少，反而会出现某种特殊的规律。这是因为我们错误的理解随机，随机不代表平均。不要以为随机播放，前后两首歌一样就不是不随机了</li></ul></li></ul><h3 id="技术类"><a href="#技术类" class="headerlink" title="技术类"></a>技术类</h3><p><a href="http://mp.weixin.qq.com/s/8zwJKzdNhnmqMdSjZjOYTQ" target="_blank" rel="external">使用IGV看序列比对情况</a> IGV的最基础的使用</p><p><a href="https://mp.weixin.qq.com/s/5bNdHkl3QDFmCNmrht3VWA" target="_blank" rel="external">生信宝典之傻瓜式 (一) 如何提取指定位置的基因组序列</a> 如果只需要查找几个序列， 可以用NCBI的<strong>nucleotide</strong>数据库</p><p><a href="http://mp.weixin.qq.com/s/lHKZtzpN2k9uPN7e6HjH3w" target="_blank" rel="external">非模式基因GO富集分析：以玉米为例+使用OrgDb</a> 学会使用annotationhub下载注释，学会恰当的转换基因名，最后就是<code>res = enrichGO(sample_genes, OrgDb=maize, pvalueCutoff=1, qvalueCutoff=1)</code></p><p>Python判断文件的三种方式</p><ul><li><p>使用os模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">os.path.exists(file)</div><div class="line">os.path.isfile(file)</div><div class="line"><span class="comment"># 检查读写，os.F_OK, os.R_OK, os.W_OK</span></div><div class="line">os.access(file, os.F/R/W_OK)</div></pre></td></tr></table></figure></li><li><p>使用try语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    f=open()</div><div class="line">    f.close()</div><div class="line"><span class="keyword">except</span> FileNotFoundError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"File is not found"</span></div><div class="line"><span class="keyword">except</span> PermissionError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"You do not have permission"</span></div></pre></td></tr></table></figure></li><li><p>使用pathlib模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">path = pathlib.Path(<span class="string">"path/file"</span>)</div><div class="line">path.exist()</div><div class="line">path.isfile()</div></pre></td></tr></table></figure></li></ul><p>根据print写法判断是Python2版本，Python3应该做一些调整。</p><h2 id="听到"><a href="#听到" class="headerlink" title="听到"></a>听到</h2><p>得到专栏《通往财富自由之路》音频版5– 遇到贵人的科学方法。李笑来老师一共整理了12条。</p><ol><li>乐观的人更容易成为他人的贵人； 区别盲目乐观和理性乐观</li><li>贵人更容易遇到贵人； 人以类聚，物以群分</li><li>能帮助他人进步的人，才是真正的贵人； 否则是施舍，授人以鱼不如授人以渔</li><li>优秀的人、值得尊重的人，更容易获得帮助； 类似2，但是这里指的人更多是牛人，而不是贵人。</li><li>乐于分享的人，更容易获得帮助； 什么叫做分享，分享就是把<strong>自己</strong>的<strong>好东西</strong>也让别人知道</li><li>不给他人制造负担的人，更容易获得帮助； 不做伸手党，不制造负担就是尽可能把自己的事情做好</li><li>不以求助为耻的人，更容易获得帮助； 和8类似，求助是一种隐形的，意义巨大的交易</li><li>求助的时候，不应该仅仅用金钱作为回报，帮助他人的时候也不应该收取金钱回报；</li><li>贵人不一定是牛人，牛人常常只不过是自顾自地牛，贵人可不一样，他们常常“以和为贵”，并且更懂得“独贵贵不如众贵贵”； 类似2，但是我认为贵人本身一定具有才能，曾经是牛人</li><li>很多时候，人们的成功，来源于大量的人希望看到他成功。反过来，若是有大量的人不愿意看到某人成功，那么这个人真的很难获得所谓的“贵人相助”； press.one 可以是案例</li><li>正在做正确事情的人，更容易获得贵人相助，所谓得道多助，说的就是这个； 趋利避害</li><li>活在未来的人更容易遇到贵人，因为别人能在他的身上看到未来； 时光机七种</li></ol><p>这是去年听到的内容。在这一时间里，虽然忘记了大部分内容。但是行为习惯上，我通过写作，帮助他人，正确的提问，使得自己遇到了许多贵人。也就是说践行这些原则，那么在一段时间之后你遇到的贵人将会越来越多。</p><p>得到专栏《通往财富自由之路》音频版13–我是如何错过一次升级的。 主要内容是根据自己的亲身经历讲述了一次“错过”。 也就是当你觉得一件事情和你有关系的时候，这件事情未必和你产生关系，但是当你觉得这件事情没有关系的时候，那么他就会必然和你毫无关联。</p><p>得到专栏《通往财富自由之路》音频版14–这个世界其实是有生命的。这个世界由人组成的，人是有生命的，你如何对待他人，他人就怎么对待你。大部分你认为的侵害你权利的行为，或许也只是别人的不小心结果，告诉他，你这个行为让我有点不开心，我也有过无意让别人不开心的时刻。除非那个人的却是处心积虑让你不爽，那么下次那个人就会注意。</p><p>得到专栏《通往财富自由之路》音频版–彻底戒掉你的抱怨： 为什么要彻底戒掉你的抱怨？ 但我们处理事情的时候，如果能做就去完成，如果不能，说明能力暂时不够，那么请忍耐自己的不完美，然后不断学习，变得更加优秀。 抱怨没有任何意义， 抱怨的目的是为了博得他人的同情，把自己的伤疤展现给别人看。这有什么意义吗？ 你又不是乞丐，你需要通过展示自己的无能来谋生吗？ 一个爱抱怨的人，基本就可以认为是一个无能，且不坚韧的人。并且抱怨还会在一定程度上重塑你的大脑，于是到最后你将会保持没有成就的样子，而且一直抱怨下去。</p><p>如果有以前事情对你毫无益处，你为什么不把他戒掉。抱怨只会体现出个人的无能和无奈，而一个从不抱怨的人，则是基于自己的能力和坚韧。</p><p>戒掉抱怨又涉及到了执行力，这不是一天二天就能完成的。需要不断的重复和实践，以至于下意识，从骨子里，从字典里把“抱怨”剔除，也就是建立让理智建立快捷方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一周尝试每天都做回顾，于是就有将近8000多个字符的内容被我写了出来，就可以有选择的挑选出自己觉得有意义的东西了。&lt;/p&gt;&lt;h2 id=&quot;看到&quot;&gt;&lt;a href=&quot;#看到&quot; class=&quot;headerlink&quot; title=&quot;看到&quot;&gt;&lt;/a&gt;看到&lt;/h2&gt;&lt;p&gt;首先我看到了那些内容，之前是在每周日回顾这一周看到的内容，于是遗漏了很多内容，这一次就比较全了。&lt;/p&gt;&lt;h3 id=&quot;非技术类&quot;&gt;&lt;a href=&quot;#非技术类&quot; class=&quot;headerlink&quot; title=&quot;非技术类&quot;&gt;&lt;/a&gt;非技术类&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s/vmkaSk1apx4ESDTL1DNaXA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何正确地后悔？&lt;/a&gt; 这是投资者对待错误的正确选择：1、承认过去做错了；2、现在做对的事。过去的错误是让你现在更容易正确。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;后悔是指当时自己觉得是对的，想去做，但是由于家庭原因等阻拦导致自己没有去做，事后证实自己当初判断是对的情况。&lt;br&gt;为什么不应该后悔？&lt;br&gt;第一：当初不去做，是因为那个时候能力不够，信心不足，所以那个机会不属于你。&lt;br&gt;第二：我们认为的对的，然是结果是错的情况，你没有记录。当你感觉自己遭到不公正的待遇的时候，请思考一下自己一直都被不公正对待吗？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s/lLFf_Kfh7luXceDCTp5STA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识付费这两年，我花5000元买的4个教训&lt;/a&gt; ：作者想说的就是“践行”很重要，多读经典，很多概念就是换汤不换药&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;经典书籍是&lt;strong&gt;元知识&lt;/strong&gt;， 能够不断派生&lt;strong&gt;热知识&lt;/strong&gt;。 不断阅读那些被无数前人推荐，验证的书籍，从中推演，反而比一味求那些新潮概念更加快捷。&lt;br&gt;大多数人的知识付费只是买止痛药，麻醉药。疼痛感没了，但是问题依旧存在。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="retrospect" scheme="https://xuzhougeng.github.io/tags/retrospect/"/>
    
  </entry>
  
</feed>
